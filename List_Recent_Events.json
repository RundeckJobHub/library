{
  "defaultTab": "nodes",
  "description": "List recent events for resources within the Kubernetes cluster\n\nThis Job retrieves recent events for resources within the cluster that match the particular `field-selector`.\n\nCommon examples:<br>\n`type=warning` Warning events only<br>\n`involvedObject.kind!=Pod` Exclude Pod events<br>\n`type!=Normal` Exclude normal events\n\nIf using PagerDuty Runbook Automation (SaaS), then this Job is designed to be run on an [**Enterprise Runner**](https://docs.rundeck.com/docs/administration/runner/#architecture). Follow the documentation and install the Runner in a location that can communicate with your Kubernetes cluster.",
  "executionEnabled": true,
  "group": "Containers/Kubernetes",
  "id": "c452b8a1-c938-4ee3-90e2-c97718fbdefb",
  "loglevel": "INFO",
  "name": "List Recent Events",
  "nodeFilterEditable": false,
  "notification": {
    "onfailure": {
      "plugin": {
        "configuration": {
          "incident_id": "${option.pd_incident_id}",
          "note": "Automated Diagnostics job \"${job.project}/${job.group}/${job.name}\" Failed for incident \"${option.pd_incident_id}\".   See the full Process Automation log at: ${job.url}#output"
        },
        "type": "pd-note-incident-notification"
      }
    },
    "onstart": {
      "plugin": {
        "configuration": {
          "incident_id": "${option.pd_incident_id}",
          "note": "Automated Diagnostics job \"${job.project}/${job.group}/${job.name}\" Started for incident \"${option.pd_incident_id}\".   See the full Process Automation log at: ${job.url}#output"
        },
        "type": "pd-note-incident-notification"
      }
    },
    "onsuccess": {
      "plugin": {
        "configuration": {
          "incident_id": "${option.pd_incident_id}",
          "note": "Automated Diagnostics job \"${job.project}/${job.group}/${job.name}\" Succeeded for incident \"${option.pd_incident_id}\".   See the full Process Automation log at: ${job.url}#output"
        },
        "type": "pd-note-incident-notification"
      }
    }
  },
  "notifyAvgDurationThreshold": null,
  "options": [
    {
      "description": "Field Selector used for the `kubectl` command.",
      "label": "Field Selector",
      "name": "field_selector",
      "required": true,
      "value": "type=Warning"
    },
    {
      "description": "ID of the PagerDuty incident that should receive the diagnostics queried from this automation.\nThis field is **_not_** required to invoke this Job.",
      "label": "PagerDuty Incident ID",
      "name": "pd_incident_id"
    }
  ],
  "plugins": {
    "ExecutionLifecycle": null
  },
  "scheduleEnabled": true,
  "schedules": [],
  "sequence": {
    "commands": [
      {
        "adhocExecution": "true",
        "description": "Retrieve events matching field selector",
        "exec": "kubectl get events --field-selector ${option.field_selector}",
        "plugins": {
          "LogFilter": [
            {
              "config": {
                "captureMultipleKeysValues": "false",
                "hideOutput": "false",
                "logData": "true",
                "name": "recent_k8s_events",
                "regex": "(.*)"
              },
              "type": "key-value-data-multilines"
            }
          ]
        }
      },
      {
        "configuration": {
          "incident_id": "${option.pd_incident_id}",
          "note": "Recent Kubernetes Events:\\n ${data.recent_k8s_event*}"
        },
        "description": "Send Diagnostics to PagerDuty",
        "errorhandler": {
          "configuration": {
            "text": "Please provide PagerDuty API token and Incident ID to send diagnostics to Incident."
          },
          "keepgoingOnSuccess": true,
          "nodeStep": false,
          "type": "progress-badge"
        },
        "nodeStep": false,
        "type": "pd-note-step"
      }
    ],
    "keepgoing": false,
    "strategy": "node-first"
  },
  "tags": "kubernetes",
  "uuid": "c452b8a1-c938-4ee3-90e2-c97718fbdefb"
}